# 주요학습범위
1. 함수 사용자정의함수, 내장함수
2. 객체 내장객체

# 생각해봅시다.
1. 프로그램에서 객체를 쓴다는 것을 어떤 기능적인 필요성이 있는가?
	1) 메모리 사용의 단계
		- 변수/상수 : 하나의 변수에 하나의 데이터를 할당하여 활용
			var name = "홍길동"; age = 25;
		- 배열 : 하나의 변수에 index로 구분하여 여러개의 데이터를 활용
			var books = {"java기초", "html활용", "javascript 중급"};
			books[0] books[1] books[2]
			반복문과 함께 데이터를 효과적으로 사용할 수 있다.
		- 객체: 하나의 참조변수에 여러 유형의 데이터를 이름을 지정해서 활용할 수 있다
			var person = { name:"홍길동", age:25, loc:"서울신림동", show:function(){} };
			person.name,
			person.show()

2. 내장된 객체들을 왜 필요하고, 이 내장된 객체들을 효과적으로 활용하기 위해서 어떻게
	해당 기능을 파악하여야 하는가?
	프로그래머가 처음부터 다시 작성하지 않고, 많이 쓰이는 기능을 내장되어 처리할 수 있게 객체형태로 만들어짐.
	1) 프로그래밍의 발전 단계
	- 초창기 컴파일러/인터프리터 프로그래밍
	- 변수와 기능 함수 위주 프로그래밍
	- 객체지향 프로그래밍
	- 내장된 함수의 확장
	- 내장된 객체의 확장
	- 프레임워크 : 주로 많이 사용되는 객체들을 모아서 모듈화하여 활용할 수 있게 한다.
	- 자동화된 소스 제너레이터 프레임워크
		ex) 테이블 ==> vo 자동 생성 ==> crud 자동생성 ==> 화면도 페이징 처리 화면을 자동생성.
		anyframework, 전자정보프레임워크

# 학습목표
1. 함수의 형식을 알고, 함수가 활용되는 상황에 맞게 적절하게 데이터를 입력하고 리턴할 수 있다.
2. ECMA에서 사용되는 함수처리 형식을 알고 활용할 수 있다.
3. 내장된 함수의 기능을 파악하고, 여러가지 함수의 기능내용을 알고 활용할 수 있다.
4. 객체의 구성요소를 알고, 선언방법과 활용방법을 이해하고 사용할 수 있다.
5. 내장된 객체의 종류를 알고, 각 객체의 특성과 사용하는 필드와 메서드를 파악하여 활용할 수 있다.

 주요핵심 keyword
3. function 함수(){};
4. eval(), parseInt, parseFloat(), isFinite()-절대값, isNaN()
5. () => {} : 화살표함수
	var fun01 = function(){};
4. Array, Date, String, Math

# 개념 및 원리이해
