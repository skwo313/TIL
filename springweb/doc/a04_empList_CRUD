# 사원정보 CRUD 처리.
1. 파일 구성 
	1) controller(A01_EmpController.java)
	2) service(A01_EmpService.java)
	3) dao(A01_EmpDao.java)
	4) mapper(EmpMapper.xml)
	5) view(WEB-INF\views\a02_mvc\a01_empList.jsp)
	6) vo(Emp.java)
2. 등록처리
	1) 방식
		*** Dialogue 방식
		화면 전환 방식
	2) 처리 사용자 인터페이스 정의
		사원정보 조회 화면에서 등록 버튼 클릭시, 등록하는 다이얼로그 화면 로딩
		해당 내용을 등록 후, 특정 기능 버튼 클릭시, 사원정보 등록 및
		전체화면 리스트 처리..
	3) 처리 순서
		- 뷰 단(jsp) 처리 
			등록 버튼으로 등록 다이얼로그 로딩
			form 등록 목록 설정 요청값 처리
			등록 controller단 호출 :form의 action 부분 선언
		- 등록 controller 선언
		- DB 처리
			sql 작성
			vo 작성
			dao, mapper 작성
			service단 처리
			controller(위 등록 처리 내용 호출)
			등록 처리 후, 출력할 리스트 controller 호출..
	4) 진행 핵심 코드.
		- 등록 처리 화면(a01_empList.jsp)
			- 다이얼로그 창 띄우기
			- form 속성 및 하위 요소객체 처리
				<form action="${path}/insertEmp.do"
					<input name="ename"/>			
			
		- 등록 요청 처리 컨트롤러(A01_EmpController.java)
			@RequestMapping("/insertEmp.do")
			public String inserEmp(Emp ins, Model d){
				d.add("proc","등록완료");
				// service
				return "WEB-INF\views\a02_mvc\a01_empList.jsp"; // 등록 후, 처리해야 할 화면 호출..
			}	
		- 등록 처리 후, 처리할 내용 (a01_empList.jsp)
			var proc = "${proc}";
			if(proc!=""){
				if( confirm( proc+"\n조회화면으로 이동하시겠습니까?") ){
					location.href="${path}/empList.do";	
				}
			}	
		- 등록 처리 dao 및 mapper
			sql 확인 
			INSERT INTO EMP02 values(EMP_SEQ.NEXTVAL,'등록자','사원',7698,to_date('2022-02-08','YYYY-MM-DD'),3000,1000,10);
		
			public void insertEmp(Emp ins);  (A01_EmpDao.java)
			<insert id="insertEmp" parameterType="emp"> (EmpMapper.xml)
				insert into emp02 values(emp_seq.nextval, ${ename}, ${job},...... );
		- service 호출  (A01_EmpService.java)
		- controller에서 처리  (A01_EmpController.java)
			service.insertEmp(ins);		

	4) 진행 핵심 코드(연습예제)
		- 등록 처리 화면(a10_deptList.jsp)
			- 다이얼로그 창 띄우기
			- form 속성 및 하위 요소객체 처리
				<form action="${path}/insertDept.do"
					<input name="deptno"/>			
					<input name="dname"/>			
					<input name="loc"/>			
			
		- 등록 요청 처리 컨트롤러(A02_DeptController.java)
			@RequestMapping("/insertDept.do")
			public String insertDept(Dept ins, Model d){
				d.add("proc","등록완료");
				// service
				return "WEB-INF\views\a02_mvc\a10_deptList.jsp"; // 등록 후, 처리해야 할 화면 호출..
			}	
		- 등록 처리 후, 처리할 내용 (a10_deptList.jsp)
			var proc = "${proc}";
			if(proc!=""){
				alert(proc);
				location.href="${path}/deptList.do";	
			}	
		===========================================================	
		- 등록 처리 dao 및 mapper 
			public void insertDept(Dept ins);  (A02_DeptDao.java)
			<insert id="insertDept" parameterType="dept"> (DeptMapper.xml)
				insert into dept02 values(${deptno}, ${dname}, ${loc})
		- service 호출  (A02_DeptService.java)
		- controller에서 처리  (A02_DeptController.java)
			service.insertDept(ins);	
			
3. 상세화면(수정/삭제처리)
	1) 상세화면 로딩
		
		리스트 jsp화면에서 상세화면 가기(a01_empList.jsp)
			<tr ondbclick="geDetail(${empno} )"><td>${empno}
			function geDetail(empno){
				location.href="${path}/emp.do?empno="+empno;
			}
		controller(A01_EmpController.java)
			@RequestMapping("/emp.do")
			public String getEmpno(int empno){
				return "WEB-INF\views\a02_mvc\a02_empDetail.jsp"
			}
		-------------------------
		sql : select * from emp02 where empno=@@@
		vo : Emp
		dao/mapper
			public Emp getEmp(int empno);
			<select id="getEmp" parmeterType="int">
				select * from emp02 where empno=#{empno}
				
	2) 수정
	
	3) 삭제		
				
				
				
							 	
			
			