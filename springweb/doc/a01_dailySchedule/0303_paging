2022-03-03
# 전날 복습
[1단계:개념] 1. 페이징 처리시, service 단의 BoardSch 속성 처리 순서를 기술하세요
	1. 전체 갯수 : count(DB)
		sch.setCount(dao.totCnt(sch));
	2. 한번에 보일 페이지 수 초기값 설정  pageSize (화면요청)
		if(sch.getPageSize()==0) {
				sch.setPageSize(5);
			}
	3. 총 페이지 수 (전체갯수, 한번에 보일 페이지 수) : count/pageSize (로직)
	4. 클릭한 현재 페이지 호출 : curPage (화면요청)
	5. 시작번호 : start (로직)
	6. 마지막번호 : end (로직)
	7. 페이지블럭크기 : blockSize(지정)
	8. 시작블럭 : startBlock(로직)
	9. 마지막블럭 : endBlock(로직)
	
[1단계:개념] 2. 위 내용을 화면요청값, DB, 로직으로 구분하여 기술하세요 
[1단계:개념] 3. 위 속성 중 초기값 처리가 필요한 속성과 이유를 기술하세요
	한번에 보일 페이지 수 설정 pageSize
	클릭한 현재 페이지 번호 : curPage
	
[1단계:개념] 4. 전체 페이지 갯수를 처리하는 로직을 기술하세요
	
[1단계:개념] 5. 페이지당 시작번호와 마지막 번호를 처리하는 로직을 기술하세요
[1단계:개념] 6. 하단에 페이지 블럭단위를 처리하는 로직을 순서별로 기술하세요 

# 주요학습범위
1. spring boot 활용

# 생각해봅시다.
1. 스프링 boot의  view단의 처리 방식이 어떤 것이 있는가?
	template를 활용하는 방법 : jsp, 타임리프, freemaker
	ajax를 통해 view단을 따로 분리 시켜 처리하는 방법 :
		ajax + vue(html)
	웹서버 : html기반 프런트 프레임워크 활용(css, html, js) - vue, react, 앵귤러 - node 환경
	+
	웹어플리케이션 서버 : 스프링부트
	
2. 스프링 boot에서 ajax로 vue단과 어떻게 연동하여 처리하는가?
	
3. 스프링 boot의 lib 처리 방식은 무엇인가?
		
			
# 학습목표
1. 스프링 boot로 개발 환경을 만들 수 있다.
2. 스프링 boot의 템플릿을 이해하고 활용할 수 있다.
3. 스프링 boot의 DB 처리 방식을 이해하고 활용할 수 있다.

 	
# 주요핵심 keyword
