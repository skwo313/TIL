# 주요학습범위
1. 스프링 DI 연습 (공통변수 설정, namespace)
2. 데이터 베스 설정과 활용시작

# 생각해봅시다.
1. 공통 환경 변수는 어떤 것이 있고, 스프링에서는 이것을 어떤 방법으로 설정할까?
	- 소스상 계속 반복적으로 활용되며, 전체 소스에 영향이 있는 내용
		- DB서버 접속정보, 파일업로드 경로, 외부 연계 api 설정.
	- 컨테이너에서 설정하여 호출하는 공통 설정 파일의 키와 값을 호출하여 처리하는 방법 확인
	
2. spring에서 처리하는 xml형식의 sql이란 무엇일까?
	- 인터페이스 + xml( dao 인터페이스에 입력/리턴값을 전달하고 받아 처리할 수 있다)
	- mybatis프레임워크에서 내부적으로 인터페이스를 상속받은 실제 dao 객체 자동 생성해서 처리해준다.

3. 스프링학습의 내용 계열화는 어떤 것이 있을까?
	- 클라이언트(브라우저)와 서버(톰캣)간의 화면 호출과 데이터 전달 방식에 대한 이해
		url을 통한 화면 호출
		요청값을 통한 데이터 전달  url?key=value
		서버로부터 client에 화면 전달.
		cf) jsp 기준으로 파악

	- mvc 구조에 대한 이해
		스프링에서는 위에 화면 호출과 요청값 전달을 어떤 방식으로 하고 있는지?
		controller에서 화면 호출되는 방식, 이름 위해 필요로 하는 controller 생성과 설정방법
		url과 mapping 되어 있는 각 기능 메서드의 호출방식
		
		// 브라우저 호출 url/callPage.do?요청키=요청값 
		// 위 호출 url을 통해서 나타나는 jsp화면
		@RequestMapping("/callPage.do")
		public String callPage(@RequestParam("요청키") String key, Model d){
			d.addAttribute("모델키", "모델값");
			
			return "호출할 jsp페이지";
		}
	
	- mvc를 처리하기 위해 IOC(제어역전) 개념 이해
		위 스프링 MVC를 진행하기 위해 스프링 컨테이너에서 지원하고 있는데,
		이러한 기본 core가 되는 스프링 컨테이너의 설정방법 객체 생성방법을 이해하고, 활용할 수 있어야 한다.
		컨테이너에 대한 이해가 있어야지 추가되는 프레임워크에 대한 설정이나 객체 활용을 할 수 있게 된다.

# 학습목표
1. namespace로 객체 생성방법을 알고, 활용할 수 있다.

2. 공통변수를 설정할 수 있다.
3. 데이터베이스의 기초를 설정할 수 있다.