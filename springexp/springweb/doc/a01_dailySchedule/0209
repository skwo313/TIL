# 주요학습범위
1. 스프링 MVC 개발 패턴으로 화면 구현하기
2. vue 시작
3. ajax 보강

# 생각해봅시다
1. 웹에서 파일 업로드 다운로드를 하기 위한 어떤 절차가 필요하는가?
	스프링 : 파일 업로드 view/다운로드 view를 선택하여, 처리하는 방식
	view : jsp(html)는 화면에 보이게 처리 개념이지만, 이외에도 여러 형식의
		view을 제공하고 있다. 파일업로드 뷰도 그 일부분이다.
	파일 업로드를 위한 절차
		- spring에서 지원하는 파일 업로드 view를 컨테이너에 선언
			- 설정 conf에 파일 업로드할 위치를 지정
		- form 속성으로 파일 업로드 하는 속성을 선언
		- form 하위 요소객체 input type='file' 선언 
		- 요청값을 네트웍상 파일을 stream 형식을 전송하는 Multipart객체를 처리
		- controller에서 Multipart 형식을 File객체로 변환처리.
		- 특정한 위치에 저장 처리
		
2. vue는 어떤 이점이 있고, 이를 위한 환경 구성이 필요로 하는가?
	1) front end의 최신 framework
		javascript ==> jquery ==> node ==> angular
		react ==> vue
		어떻게 하면 효과적으로 빠르게 웹 화면을 구성할 것인가에 대한 고민으로
		여러가지 javascript 관련 lib와 framework이 만들어졌다.
		최근에 가장 많이 활용되는 framework의 하나로, 백엔드단과 ajax로
		연동하여 웹화면을 구성한다.
	2) 환경 구성
		lib를 이용해서 선언하기(jsp와 함께 사용가능)
		node 환경에서 웹서버로 탑재하여 구현하기(백엔드와 완전히 분리)된 개발 환경
			웹서버(html/css/js/vue - node웹서버) + 웹어플리케이션서버(tomcat - 스프링 백엔드용 서버)	

# 학습목표
1. 스프링에서 필요로 하는 CRUD 구조를 알고, 활용할 수 있다.
2. 파일 업로드를 처리하기 위한 스프링 환경을 구성하고, 파일 업로드를 처리할 수 있다.
3. vue의 핵시점인 구조를 알고 활용할 수 있다.